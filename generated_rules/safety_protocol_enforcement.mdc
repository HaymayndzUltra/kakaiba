---
description: "TAGS: [safety,validation,risk-assessment,compliance] | TRIGGERS: [ASSESS_RISK,VALIDATE_ACTIONS,ENFORCE_SAFETY,CHECK_COMPLIANCE] | SCOPE: project-rules | DESCRIPTION: Implements comprehensive safety protocols for risk assessment, validation, and compliance enforcement in AI systems."
alwaysApply: false
---

# Safety Protocol Enforcement Rule

## [STRICT] Purpose
Implement comprehensive safety protocols for risk assessment, pre-analysis, validation, and compliance enforcement to ensure error-resistant execution aligned with global safety standards in AI systems.

## [STRICT] Core Capabilities

### 1. Risk Assessment Engine
- **Threat Identification**: Identify potential risks and threats
- **Impact Analysis**: Analyze potential impact of actions
- **Probability Assessment**: Assess probability of risk occurrence
- **Mitigation Planning**: Develop risk mitigation strategies

### 2. Action Validation Framework
- **Pre-Execution Validation**: Validate actions before execution
- **Safety Compliance Check**: Ensure actions comply with safety standards
- **Resource Validation**: Validate resource requirements and availability
- **Dependency Validation**: Validate action dependencies

### 3. Compliance Enforcement
- **Regulatory Compliance**: Ensure compliance with relevant regulations
- **Industry Standards**: Enforce industry-specific safety standards
- **Internal Policies**: Enforce internal safety policies
- **Best Practices**: Apply safety best practices

### 4. Error Prevention and Recovery
- **Error Detection**: Detect potential errors before they occur
- **Prevention Measures**: Implement measures to prevent errors
- **Recovery Procedures**: Define recovery procedures for errors
- **Escalation Protocols**: Define escalation procedures for critical issues

## [STRICT] Triggers

### ASSESS_RISK
- **Purpose**: Assess risks associated with proposed actions or projects
- **Input**: Action description, context, and safety requirements
- **Process**:
  1. Identify potential risks and threats
  2. Analyze risk probability and impact
  3. Evaluate risk mitigation options
  4. Generate risk assessment report
  5. Recommend safety measures
- **Output**: Risk assessment report with mitigation recommendations

### VALIDATE_ACTIONS
- **Purpose**: Validate actions before execution to ensure safety
- **Input**: Action plan, safety requirements, and context
- **Process**:
  1. Check action against safety standards
  2. Validate resource requirements
  3. Verify dependency satisfaction
  4. Check compliance requirements
  5. Approve or reject action
- **Output**: Validation result with approval status

### ENFORCE_SAFETY
- **Purpose**: Enforce safety protocols during execution
- **Input**: Execution plan and safety protocols
- **Process**:
  1. Monitor execution for safety compliance
  2. Detect safety violations
  3. Apply corrective measures
  4. Escalate critical issues
  5. Maintain safety logs
- **Output**: Safety enforcement report with violations and actions

### CHECK_COMPLIANCE
- **Purpose**: Check compliance with safety standards and regulations
- **Input**: System state, actions, and compliance requirements
- **Process**:
  1. Check regulatory compliance
  2. Verify industry standards adherence
  3. Validate internal policy compliance
  4. Assess best practices implementation
  5. Generate compliance report
- **Output**: Compliance report with status and recommendations

## [STRICT] Safety Categories

### 1. Data Safety
- **Data Privacy**: Ensure data privacy protection
- **Data Security**: Implement data security measures
- **Data Integrity**: Maintain data integrity
- **Data Retention**: Comply with data retention policies
- **Data Access**: Control data access appropriately

### 2. System Safety
- **System Stability**: Ensure system stability
- **Resource Protection**: Protect system resources
- **Performance Safety**: Maintain safe performance levels
- **Availability Safety**: Ensure safe availability levels
- **Scalability Safety**: Maintain safe scaling practices

### 3. Operational Safety
- **Process Safety**: Ensure safe operational processes
- **Workflow Safety**: Maintain safe workflow execution
- **Integration Safety**: Ensure safe system integrations
- **Deployment Safety**: Maintain safe deployment practices
- **Maintenance Safety**: Ensure safe maintenance procedures

### 4. User Safety
- **User Data Protection**: Protect user data
- **User Privacy**: Maintain user privacy
- **User Experience Safety**: Ensure safe user experiences
- **Access Control**: Implement appropriate access controls
- **Authentication Safety**: Ensure secure authentication

## [STRICT] Risk Assessment Framework

### Risk Categories
1. **Critical Risks**: Immediate threat to system or users
2. **High Risks**: Significant potential for damage
3. **Medium Risks**: Moderate potential for issues
4. **Low Risks**: Minor potential for problems
5. **Informational**: No immediate risk but worth noting

### Risk Factors
- **Probability**: Likelihood of risk occurrence (0-100%)
- **Impact**: Potential impact if risk occurs (0-100%)
- **Urgency**: How quickly risk needs to be addressed
- **Mitigation**: Available mitigation options
- **Cost**: Cost of mitigation measures

### Risk Assessment Matrix
```
                Low Impact    Medium Impact    High Impact
Low Probability    Low Risk      Low Risk       Medium Risk
Medium Probability Low Risk     Medium Risk      High Risk
High Probability  Medium Risk    High Risk      Critical Risk
```

## [STRICT] Validation Framework

### Pre-Execution Validation
1. **Safety Standards Check**: Verify compliance with safety standards
2. **Resource Validation**: Ensure sufficient resources available
3. **Dependency Check**: Verify all dependencies are satisfied
4. **Permission Validation**: Check required permissions
5. **Risk Assessment**: Assess risks associated with action

### During Execution Monitoring
1. **Progress Monitoring**: Monitor execution progress
2. **Safety Compliance**: Ensure ongoing safety compliance
3. **Resource Monitoring**: Monitor resource usage
4. **Error Detection**: Detect and handle errors
5. **Performance Monitoring**: Monitor performance metrics

### Post-Execution Validation
1. **Output Validation**: Validate execution outputs
2. **Safety Verification**: Verify safety requirements met
3. **Quality Assessment**: Assess output quality
4. **Compliance Check**: Verify compliance maintained
5. **Documentation**: Document execution results

## [STRICT] Compliance Standards

### Regulatory Compliance
- **GDPR**: General Data Protection Regulation compliance
- **CCPA**: California Consumer Privacy Act compliance
- **HIPAA**: Health Insurance Portability and Accountability Act
- **SOX**: Sarbanes-Oxley Act compliance
- **Industry-Specific**: Industry-specific regulations

### Industry Standards
- **ISO 27001**: Information security management
- **ISO 9001**: Quality management systems
- **NIST**: National Institute of Standards and Technology
- **OWASP**: Open Web Application Security Project
- **CIS**: Center for Internet Security

### Internal Policies
- **Data Handling**: Internal data handling policies
- **Security**: Internal security policies
- **Access Control**: Internal access control policies
- **Incident Response**: Internal incident response procedures
- **Audit**: Internal audit requirements

## [STRICT] Error Handling and Recovery

### Error Categories
1. **Safety Violations**: Violations of safety protocols
2. **Compliance Violations**: Violations of compliance requirements
3. **Resource Violations**: Violations of resource constraints
4. **Process Violations**: Violations of process requirements
5. **System Violations**: Violations of system constraints

### Recovery Procedures
1. **Immediate Response**: Immediate response to critical errors
2. **Containment**: Contain error impact
3. **Investigation**: Investigate error causes
4. **Correction**: Correct error conditions
5. **Prevention**: Implement prevention measures

### Escalation Procedures
1. **Level 1**: Automated response and correction
2. **Level 2**: Human operator notification
3. **Level 3**: Management notification
4. **Level 4**: Executive notification
5. **Level 5**: External authority notification

## [STRICT] Safety Monitoring

### Real-time Monitoring
- **Safety Metrics**: Monitor safety-related metrics
- **Compliance Status**: Monitor compliance status
- **Risk Levels**: Monitor current risk levels
- **Error Rates**: Monitor error rates
- **Performance**: Monitor safety-related performance

### Alerting System
- **Critical Alerts**: Immediate alerts for critical issues
- **Warning Alerts**: Alerts for potential issues
- **Info Alerts**: Informational alerts
- **Escalation Alerts**: Alerts for escalation requirements
- **Recovery Alerts**: Alerts for recovery actions

### Reporting
- **Daily Reports**: Daily safety status reports
- **Weekly Reports**: Weekly safety summary reports
- **Monthly Reports**: Monthly safety analysis reports
- **Incident Reports**: Incident-specific reports
- **Compliance Reports**: Compliance status reports

## [STRICT] Safety Metrics

### Compliance Metrics
- **Compliance Rate**: Percentage of actions compliant
- **Violation Rate**: Rate of safety violations
- **Resolution Time**: Time to resolve violations
- **Prevention Rate**: Rate of prevented issues
- **Audit Score**: Safety audit scores

### Performance Metrics
- **Response Time**: Time to respond to safety issues
- **Detection Rate**: Rate of issue detection
- **Recovery Time**: Time to recover from issues
- **Availability**: System availability during safety events
- **Throughput**: Safe throughput levels

### Quality Metrics
- **False Positive Rate**: Rate of false safety alerts
- **False Negative Rate**: Rate of missed safety issues
- **Accuracy**: Accuracy of safety assessments
- **Reliability**: Reliability of safety systems
- **Effectiveness**: Effectiveness of safety measures

## [STRICT] Learning and Improvement

### Pattern Recognition
- **Safety Patterns**: Learn common safety patterns
- **Risk Patterns**: Learn risk identification patterns
- **Error Patterns**: Learn error patterns and causes
- **Compliance Patterns**: Learn compliance patterns
- **Recovery Patterns**: Learn effective recovery patterns

### Continuous Improvement
- **Safety Analysis**: Analyze safety performance
- **Process Improvement**: Improve safety processes
- **Tool Enhancement**: Enhance safety tools
- **Training**: Improve safety training
- **Documentation**: Improve safety documentation

### Feedback Integration
- **User Feedback**: Integrate user safety feedback
- **System Feedback**: Integrate system safety feedback
- **External Feedback**: Integrate external safety feedback
- **Audit Feedback**: Integrate audit feedback
- **Incident Feedback**: Integrate incident feedback

## [STRICT] Example Usage

### Scenario 1: Code Generation Safety
```
User: "Generate code for user authentication system"

ASSESS_RISK →
  - Identifies security risks in authentication code
  - Assesses data privacy implications
  - Evaluates compliance requirements
  - Recommends security measures

VALIDATE_ACTIONS →
  - Validates code generation approach
  - Checks security best practices
  - Verifies compliance requirements
  - Approves safe generation approach
```

### Scenario 2: Data Processing Safety
```
User: "Process sensitive customer data for analysis"

ASSESS_RISK →
  - Identifies data privacy risks
  - Assesses regulatory compliance requirements
  - Evaluates data security implications
  - Recommends privacy protection measures

ENFORCE_SAFETY →
  - Monitors data processing for compliance
  - Ensures data anonymization
  - Validates access controls
  - Maintains audit trail
```

### Scenario 3: System Integration Safety
```
User: "Integrate with external payment system"

CHECK_COMPLIANCE →
  - Verifies PCI DSS compliance
  - Checks data security requirements
  - Validates encryption standards
  - Ensures secure communication

VALIDATE_ACTIONS →
  - Validates integration approach
  - Checks security protocols
  - Verifies compliance requirements
  - Approves secure integration
```

This rule provides comprehensive safety protocol enforcement capabilities that can be triggered by the specified commands and integrates with the broader AI Governor system architecture.